generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin {
  id       Int    @id @unique @default(autoincrement())
  username String @unique
  email    String @unique
  password String
}

model user {
  id       Int      @id @unique @default(autoincrement())
  username String   @unique
  email    String   @unique
  password String
  country  String
  gender   String
  reviews  review[]
}

model author {
  id          Int    @id @unique @default(autoincrement())
  name        String
  image       String
  country     String
  description String
  books       book[]
}

model publisher {
  id       Int    @id @unique @default(autoincrement())
  name     String  @unique
  location String
  books    book[]
}

model book {
  id          Int       @id @unique @default(autoincrement())
  title       String    @unique
  slug String @unique
  cover       String
  language    String
  downloads   Int
  pages       Int
  type        String
  size        String
  rate        Float
  price       String
  description  String
  author      author    @relation(fields: [authorId], references: [id])
  publisher   publisher? @relation(fields: [publisherId], references: [id])
  category   category @relation(fields: [categoryId], references: [id])
  categoryId Int
  authorId    Int
  publisherId Int?
  reviews     review[]
  sections    section[]
}

model section {
  id    Int    @id @unique @default(autoincrement())
  title String @unique
  books book[]
}

model category {
  id    Int    @id @unique @default(autoincrement())
  title String @unique
  books book[]
}

model review {
  id       Int      @id @unique @default(autoincrement())
  date     DateTime @default(now())
  comment  String
  user   user     @relation(fields: [userId], references: [id])
  book     book     @relation(fields: [bookId], references: [id])
  userId Int
  bookId   Int
}
